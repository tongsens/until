__author__ = 'root'
import sqlite3
from collections import Counter

class FindMalware():
    def __init__(self,md5):
        self.cx = sqlite3.connect('md5idx.db')
        self.cu = self.cx.cursor()
        self.md5 = md5


    def cmp_idx(self, idx1, idx2):
        uni = idx1|idx2
        xor = idx1^idx2
        uc = Counter(bin(uni)[2:])
        xc = Counter(bin(xor)[2:])
        return float(1) - float(xc['1'])/float(uc['1'])

    def select_all(self):
        select_cmd = "SELECT * FROM md5s"
        self.cu.execute(select_cmd)
        res = self.cu.fetchall()
        return res

    def select_md5(self):
        select_cmd = 'SELECT * FROM md5s WHERE md5="%s"'%self.md5
        self.cu.execute(select_cmd)
        res = self.cu.fetchall()
        return res

    def find_topk(self, k=5):
        md5_idx = self.select_md5()[0][1]
        md5idd = int(md5_idx, 2)
        if md5idd == 0:
            print "There is no data"
        all_data = self.select_all()
        result = []
        for data in all_data:
            idx = int(data[1],2)
            rate = self.cmp_idx(md5idd, idx)
            if rate>0.5:
                result.append((data[0], rate))
        ret = sorted(result, key=lambda d:d[1], reverse=True)
        for x in ret[:k]:
            print x
        return [d[0] for d in ret[:k]]

if __name__ == '__main__':
    md5 = '6b446db3949e46bd72774b28cf258287'
    fm = FindMalware(md5)
    rets = fm.find_topk(7)
    print rets